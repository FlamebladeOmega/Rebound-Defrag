<?xml version="1.0" encoding="utf-8"?>
<winuiex:WindowEx
    x:Class="ReboundDefrag.MainWindow"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:ReboundDefrag"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:winuiex="using:WinUIEx"
    mc:Ignorable="d" xmlns:animatedvisuals="using:Microsoft.UI.Xaml.Controls.AnimatedVisuals">
    <Grid>
        <StackPanel Spacing="10" Margin="15, 5, 15, 15">
            <InfoBar IsOpen="True" IsClosable="False" Title="You can optimize your drives to help your computer run more efficiently, or analyze them to find out if they need to be optimized. Only drives on or connected to your computer are shown."/>
            <ListView x:Name="MyListView" SelectionChanged="ListviewSelectionChange" CornerRadius="4"
                  BorderThickness="1" Height="225" Padding="3" HorizontalAlignment="Stretch" VerticalAlignment="Top"
                    BorderBrush="{ThemeResource CardStrokeColorDefaultBrush}" Background="{ThemeResource SystemFillColorAttentionBackgroundBrush}" SelectedIndex="0" SelectionMode="Single" IsMultiSelectCheckBoxEnabled="True">
                <ListView.ItemTemplate>
                    <DataTemplate>
                        <StackPanel Orientation="Horizontal">
                            <Image Source="{Binding ImagePath}" Width="24" Height="24" Margin="0,0,10,0"/>
                            <TextBlock Text="{Binding Name}" VerticalAlignment="Center"/>
                        </StackPanel>
                    </DataTemplate>
                </ListView.ItemTemplate>
            </ListView>
            <Grid>
                <ToggleSwitch x:Name="AdvancedView" OffContent="Advanced View" OnContent="Advanced View" IsEnabled="False"/>
                <StackPanel Orientation="Horizontal" HorizontalAlignment="Right" Spacing="10">
                    <StackPanel.Resources>

                        <Style x:Key="AccentSplitButtonStyle" TargetType="SplitButton">
                            <Setter Property="Background" Value="{ThemeResource AccentFillColorDefaultBrush}" />
                            <Setter Property="Foreground" Value="{ThemeResource TextOnAccentFillColorPrimaryBrush}" />
                            <Setter Property="BorderBrush" Value="{ThemeResource ControlElevationBorderBrush}" />
                            <Setter Property="BorderThickness" Value="{ThemeResource SplitButtonBorderThemeThickness}" />
                            <Setter Property="HorizontalAlignment" Value="Left" />
                            <Setter Property="VerticalAlignment" Value="Center" />
                            <Setter Property="FontFamily" Value="{ThemeResource ContentControlThemeFontFamily}" />
                            <Setter Property="FontWeight" Value="Normal" />
                            <Setter Property="FontSize" Value="{ThemeResource ControlContentThemeFontSize}" />
                            <Setter Property="UseSystemFocusVisuals" Value="True" />
                            <Setter Property="FocusVisualMargin" Value="-1" />
                            <Setter Property="IsTabStop" Value="True" />
                            <Setter Property="Padding" Value="{ThemeResource ButtonPadding}" />
                            <Setter Property="CornerRadius" Value="{ThemeResource ControlCornerRadius}" />
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="SplitButton">
                                        <Grid x:Name="RootGrid" Background="Transparent" CornerRadius="{TemplateBinding CornerRadius}">
                                            <Grid.BackgroundTransition>
                                                <BrushTransition Duration="0:0:0.1"/>
                                            </Grid.BackgroundTransition>
                                            <Grid.Resources>
                                                <!-- Override the style of the inner buttons so that they don't affect background/foreground/border colors -->
                                                <Style TargetType="Button">
                                                    <Setter Property="Foreground" Value="{ThemeResource TextOnAccentFillColorPrimaryBrush}" />
                                                    <Setter Property="BorderBrush" Value="Transparent" />
                                                    <Setter Property="BorderThickness" Value="{ThemeResource SplitButtonBorderThemeThickness}" />
                                                    <Setter Property="HorizontalAlignment" Value="Left" />
                                                    <Setter Property="VerticalAlignment" Value="Center" />
                                                    <Setter Property="FontFamily" Value="{ThemeResource ContentControlThemeFontFamily}" />
                                                    <Setter Property="FontWeight" Value="Normal" />
                                                    <Setter Property="FontSize" Value="{ThemeResource ControlContentThemeFontSize}" />
                                                    <Setter Property="UseSystemFocusVisuals" Value="{StaticResource UseSystemFocusVisuals}" />
                                                    <Setter Property="FocusVisualMargin" Value="-3" />
                                                    <Setter Property="Template">
                                                        <Setter.Value>
                                                            <ControlTemplate TargetType="Button">
                                                                <Grid x:Name="RootGrid" Background="Transparent">

                                                                    <VisualStateManager.VisualStateGroups>
                                                                        <VisualStateGroup x:Name="CommonStates">
                                                                            <VisualState x:Name="Normal" >
                                                                                <VisualState.Setters>
                                                                                    <Setter Target="RootGrid.Background" Value="{ThemeResource AccentFillColorDefaultBrush}" />

                                                                                </VisualState.Setters>
                                                                            </VisualState>

                                                                            <VisualState x:Name="PointerOver">
                                                                                <VisualState.Setters>
                                                                                    <Setter Target="RootGrid.Background" Value="{ThemeResource AccentFillColorSecondaryBrush}" />
                                                                                    
                                                                                </VisualState.Setters>
                                                                            </VisualState>

                                                                            <VisualState x:Name="Pressed">
                                                                                <VisualState.Setters>
                                                                                    <Setter Target="RootGrid.Background" Value="Transparent" />
                                                                                    
                                                                                </VisualState.Setters>
                                                                            </VisualState>

                                                                            <VisualState x:Name="Disabled">
                                                                                <VisualState.Setters>
                                                                                    <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource SplitButtonForegroundDisabled}" />
                                                                                    <Setter Target="ContentPresenter.BorderBrush" Value="Transparent" />
                                                                                    <Setter Target="RootGrid.Background" Value="Transparent" />
                                                                                </VisualState.Setters>
                                                                            </VisualState>
                                                                        </VisualStateGroup>
                                                                    </VisualStateManager.VisualStateGroups>
                                                                    <ContentPresenter x:Name="ContentPresenter" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Content="{TemplateBinding Content}" ContentTransitions="{TemplateBinding ContentTransitions}" ContentTemplate="{TemplateBinding ContentTemplate}" Padding="{TemplateBinding Padding}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" AutomationProperties.AccessibilityView="Raw" local:AnimatedIcon.State="Normal" xmlns:local="using:Microsoft.UI.Xaml.Controls" />
                                                                </Grid>
                                                            </ControlTemplate>
                                                        </Setter.Value>
                                                    </Setter>
                                                </Style>
                                            </Grid.Resources>

                                            <VisualStateManager.VisualStateGroups>
                                                <VisualStateGroup x:Name="CommonStates">
                                                    <VisualState x:Name="Normal" >
                                                        <VisualState.Setters>
                                                            <Setter Target="PrimaryBackgroundGrid.Background" Value="{ThemeResource AccentFillColorDefaultBrush}" />
                                                            <Setter Target="SecondaryBackgroundGrid.Background" Value="{ThemeResource AccentFillColorDefaultBrush}" />
                                                            <Setter Target="SecondaryButton.BorderBrush" Value="{x:Null}" />
                                                            <Setter Target="SecondaryButton.Foreground" Value="{ThemeResource TextOnAccentFillColorPrimaryBrush}" />

                                                        </VisualState.Setters>
                                                    </VisualState>

                                                    <VisualState x:Name="Disabled">
                                                        <VisualState.Setters>
                                                            <Setter Target="Border.BorderBrush" Value="{ThemeResource SplitButtonBorderBrushDisabled}" />
                                                            <Setter Target="PrimaryBackgroundGrid.Background" Value="{ThemeResource AccentFillColorDisabledBrush}" />
                                                            <Setter Target="SecondaryBackgroundGrid.Background" Value="{ThemeResource AccentFillColorDisabledBrush}" />

                                                        </VisualState.Setters>
                                                    </VisualState>
                                                    <VisualState x:Name="FlyoutOpen">
                                                        <VisualState.Setters>
                                                            <Setter Target="PrimaryBackgroundGrid.Background" Value="{ThemeResource AccentFillColorTertiaryBrush}" />
                                                            <Setter Target="SecondaryBackgroundGrid.Background" Value="{ThemeResource AccentFillColorTertiaryBrush}" />
                                                            <Setter Target="Border.BorderBrush" Value="{ThemeResource SplitButtonBorderBrushPressed}" />
                                                            <Setter Target="PrimaryButton.Foreground" Value="{ThemeResource TextOnAccentFillColorPrimaryBrush}" />
                                                            <Setter Target="SecondaryButton.Foreground" Value="{ThemeResource TextOnAccentFillColorSecondaryBrush}" />

                                                        </VisualState.Setters>
                                                    </VisualState>
                                                    <VisualState x:Name="TouchPressed">
                                                        <VisualState.Setters>
                                                            <Setter Target="PrimaryBackgroundGrid.Background" Value="{ThemeResource AccentFillColorTertiaryBrush}" />
                                                            <Setter Target="SecondaryBackgroundGrid.Background" Value="{ThemeResource AccentFillColorTertiaryBrush}" />
                                                            <Setter Target="Border.BorderBrush" Value="{ThemeResource ControlStrokeColorOnAccentDefaultBrush}" />
                                                            <Setter Target="PrimaryButton.Foreground" Value="{ThemeResource TextOnAccentFillColorSecondaryBrush}" />
                                                            <Setter Target="SecondaryButton.Foreground" Value="{ThemeResource TextOnAccentFillColorSecondaryBrush}" />

                                                        </VisualState.Setters>
                                                    </VisualState>
                                                    <VisualState x:Name="PrimaryPointerOver">
                                                        <VisualState.Setters>
                                                            <Setter Target="PrimaryButton.Foreground" Value="{ThemeResource TextOnAccentFillColorPrimaryBrush}" />
                                                            <Setter Target="SecondaryBackgroundGrid.Background" Value="{ThemeResource AccentFillColorDefaultBrush}" />

                                                        </VisualState.Setters>
                                                    </VisualState>
                                                    <VisualState x:Name="PrimaryPressed">
                                                        <VisualState.Setters>
                                                            <Setter Target="PrimaryBackgroundGrid.Background" Value="{ThemeResource AccentFillColorTertiaryBrush}" />
                                                            <Setter Target="PrimaryButton.Foreground" Value="{ThemeResource TextOnAccentFillColorSecondaryBrush}" />
                                                            <Setter Target="SecondaryBackgroundGrid.Background" Value="{ThemeResource AccentFillColorDefaultBrush}" />

                                                        </VisualState.Setters>
                                                    </VisualState>
                                                    <VisualState x:Name="SecondaryPointerOver">
                                                        <VisualState.Setters>
                                                            <Setter Target="PrimaryBackgroundGrid.Background" Value="{ThemeResource AccentFillColorDefaultBrush}" />
                                                            <Setter Target="SecondaryButton.BorderBrush" Value="{ThemeResource ControlStrokeColorOnAccentSecondaryBrush}" />
                                                            <Setter Target="SecondaryButton.Foreground" Value="{ThemeResource TextOnAccentFillColorPrimaryBrush}" />

                                                        </VisualState.Setters>
                                                    </VisualState>
                                                    <VisualState x:Name="SecondaryPressed">
                                                        <VisualState.Setters>
                                                            <Setter Target="PrimaryBackgroundGrid.Background" Value="{ThemeResource AccentFillColorDefaultBrush}" />
                                                            <Setter Target="SecondaryBackgroundGrid.Background" Value="{ThemeResource AccentFillColorTertiaryBrush}" />
                                                            <Setter Target="SecondaryButton.Foreground" Value="{ThemeResource TextOnAccentFillColorSecondaryBrush}" />

                                                        </VisualState.Setters>
                                                    </VisualState>

                                                    <VisualState x:Name="Checked">
                                                        <VisualState.Setters>
                                                            <Setter Target="PrimaryBackgroundGrid.Background" Value="{ThemeResource SplitButtonBackgroundChecked}" />
                                                            <Setter Target="SecondaryBackgroundGrid.Background" Value="{ThemeResource SplitButtonBackgroundChecked}" />
                                                            <Setter Target="Border.BorderBrush" Value="{ThemeResource SplitButtonBorderBrushChecked}" />
                                                            <Setter Target="PrimaryButton.Foreground" Value="{ThemeResource SplitButtonForegroundChecked}" />
                                                            <Setter Target="SecondaryButton.Foreground" Value="{ThemeResource SplitButtonForegroundChecked}" />
                                                            <Setter Target="DividerBackgroundGrid.Background" Value="{ThemeResource SplitButtonBorderBrushCheckedDivider}" />

                                                        </VisualState.Setters>
                                                    </VisualState>
                                                    <VisualState x:Name="CheckedFlyoutOpen">
                                                        <VisualState.Setters>
                                                            <Setter Target="PrimaryBackgroundGrid.Background" Value="{ThemeResource SplitButtonBackgroundCheckedPressed}" />
                                                            <Setter Target="SecondaryBackgroundGrid.Background" Value="{ThemeResource SplitButtonBackgroundCheckedPressed}" />
                                                            <Setter Target="Border.BorderBrush" Value="{ThemeResource SplitButtonBorderBrushCheckedPressed}" />
                                                            <Setter Target="PrimaryButton.Foreground" Value="{ThemeResource SplitButtonForegroundCheckedPressed}" />
                                                            <Setter Target="SecondaryButton.Foreground" Value="{ThemeResource SplitButtonForegroundCheckedPressed}" />
                                                            <Setter Target="DividerBackgroundGrid.Background" Value="{ThemeResource SplitButtonBorderBrushCheckedDivider}" />

                                                        </VisualState.Setters>
                                                    </VisualState>
                                                    <VisualState x:Name="CheckedTouchPressed">
                                                        <VisualState.Setters>
                                                            <Setter Target="PrimaryBackgroundGrid.Background" Value="{ThemeResource SplitButtonBackgroundCheckedPressed}" />
                                                            <Setter Target="SecondaryBackgroundGrid.Background" Value="{ThemeResource SplitButtonBackgroundCheckedPressed}" />
                                                            <Setter Target="Border.BorderBrush" Value="{ThemeResource SplitButtonBorderBrushCheckedPressed}" />
                                                            <Setter Target="PrimaryButton.Foreground" Value="{ThemeResource SplitButtonForegroundCheckedPressed}" />
                                                            <Setter Target="SecondaryButton.Foreground" Value="{ThemeResource SplitButtonForegroundCheckedPressed}" />
                                                            <Setter Target="DividerBackgroundGrid.Background" Value="{ThemeResource SplitButtonBorderBrushCheckedDivider}" />

                                                        </VisualState.Setters>
                                                    </VisualState>
                                                    <VisualState x:Name="CheckedPrimaryPointerOver">
                                                        <VisualState.Setters>
                                                            <Setter Target="Border.BorderBrush" Value="{ThemeResource SplitButtonBorderBrushChecked}" />
                                                            <Setter Target="PrimaryBackgroundGrid.Background" Value="{ThemeResource SplitButtonBackgroundCheckedPointerOver}" />
                                                            <Setter Target="PrimaryButton.Foreground" Value="{ThemeResource SplitButtonForegroundCheckedPointerOver}" />
                                                            <Setter Target="SecondaryBackgroundGrid.Background" Value="{ThemeResource SplitButtonBackgroundChecked}" />
                                                            <Setter Target="SecondaryButton.Foreground" Value="{ThemeResource SplitButtonForegroundChecked}" />
                                                            <Setter Target="DividerBackgroundGrid.Background" Value="{ThemeResource SplitButtonBorderBrushCheckedDivider}" />

                                                        </VisualState.Setters>
                                                    </VisualState>
                                                    <VisualState x:Name="CheckedPrimaryPressed">
                                                        <VisualState.Setters>
                                                            <Setter Target="Border.BorderBrush" Value="{ThemeResource SplitButtonBorderBrushChecked}" />
                                                            <Setter Target="PrimaryBackgroundGrid.Background" Value="{ThemeResource SplitButtonBackgroundCheckedPressed}" />
                                                            <Setter Target="PrimaryButton.Foreground" Value="{ThemeResource SplitButtonForegroundCheckedPressed}" />
                                                            <Setter Target="SecondaryBackgroundGrid.Background" Value="{ThemeResource SplitButtonBackgroundChecked}" />
                                                            <Setter Target="SecondaryButton.Foreground" Value="{ThemeResource SplitButtonForegroundChecked}" />
                                                            <Setter Target="DividerBackgroundGrid.Background" Value="{ThemeResource SplitButtonBorderBrushCheckedDivider}" />

                                                        </VisualState.Setters>
                                                    </VisualState>
                                                    <VisualState x:Name="CheckedSecondaryPointerOver">
                                                        <VisualState.Setters>
                                                            <Setter Target="Border.BorderBrush" Value="{ThemeResource SplitButtonBorderBrushChecked}" />
                                                            <Setter Target="PrimaryBackgroundGrid.Background" Value="{ThemeResource SplitButtonBackgroundChecked}" />
                                                            <Setter Target="PrimaryButton.Foreground" Value="{ThemeResource SplitButtonForegroundChecked}" />
                                                            <Setter Target="SecondaryBackgroundGrid.Background" Value="{ThemeResource SplitButtonBackgroundCheckedPointerOver}" />
                                                            <Setter Target="SecondaryButton.Foreground" Value="{ThemeResource SplitButtonForegroundCheckedPointerOver}" />
                                                            <Setter Target="DividerBackgroundGrid.Background" Value="{ThemeResource SplitButtonBorderBrushCheckedDivider}" />

                                                        </VisualState.Setters>
                                                    </VisualState>
                                                    <VisualState x:Name="CheckedSecondaryPressed">
                                                        <VisualState.Setters>
                                                            <Setter Target="Border.BorderBrush" Value="{ThemeResource SplitButtonBorderBrushChecked}" />
                                                            <Setter Target="PrimaryBackgroundGrid.Background" Value="{ThemeResource SplitButtonBackgroundChecked}" />
                                                            <Setter Target="PrimaryButton.Foreground" Value="{ThemeResource SplitButtonForegroundChecked}" />
                                                            <Setter Target="SecondaryBackgroundGrid.Background" Value="{ThemeResource SplitButtonBackgroundCheckedPressed}" />
                                                            <Setter Target="SecondaryButton.Foreground" Value="{ThemeResource SplitButtonForegroundCheckedPressed}" />
                                                            <Setter Target="DividerBackgroundGrid.Background" Value="{ThemeResource SplitButtonBorderBrushCheckedDivider}" />

                                                        </VisualState.Setters>
                                                    </VisualState>

                                                </VisualStateGroup>
                                                <VisualStateGroup x:Name="SecondaryButtonPlacementStates">
                                                    <VisualState x:Name="SecondaryButtonRight" />
                                                    <VisualState x:Name="SecondaryButtonSpan">
                                                        <VisualState.Setters>
                                                            <Setter Target="SecondaryButton.(Grid.Column)" Value="0" />
                                                            <Setter Target="SecondaryButton.(Grid.ColumnSpan)" Value="3" />

                                                        </VisualState.Setters>
                                                    </VisualState>

                                                </VisualStateGroup>

                                            </VisualStateManager.VisualStateGroups>

                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition x:Name="PrimaryButtonColumn" Width="*" MinWidth="{ThemeResource SplitButtonPrimaryButtonSize}" />
                                                <ColumnDefinition x:Name="Separator" Width="1" />
                                                <ColumnDefinition x:Name="SecondaryButtonColumn" Width="{ThemeResource SplitButtonSecondaryButtonSize}" />
                                            </Grid.ColumnDefinitions>
                                            <Grid x:Name="PrimaryBackgroundGrid" Background="{TemplateBinding Background}" Grid.ColumnSpan="2">
                                                <Grid.BackgroundTransition>
                                                    <BrushTransition Duration="0:0:0.1"/>
                                                </Grid.BackgroundTransition>
                                            </Grid>
                                            <Grid x:Name="DividerBackgroundGrid" Width="1" Background="{ThemeResource ControlStrokeColorOnAccentTertiaryBrush}" Grid.Column="1" />
                                            <Grid x:Name="SecondaryBackgroundGrid" Background="{TemplateBinding Background}" Grid.Column="2">
                                                <Grid.BackgroundTransition>
                                                    <BrushTransition Duration="0:0:0.1"/>
                                                </Grid.BackgroundTransition>
                                            </Grid>
                                            <Button x:Name="PrimaryButton" Grid.Column="0" Foreground="{TemplateBinding Foreground}" Background="{TemplateBinding Background}" BorderThickness="0" BorderBrush="Transparent" Content="{TemplateBinding Content}" ContentTransitions="{TemplateBinding ContentTransitions}" ContentTemplate="{TemplateBinding ContentTemplate}" Command="{TemplateBinding Command}" CommandParameter="{TemplateBinding CommandParameter}" FontFamily="{TemplateBinding FontFamily}" FontSize="{TemplateBinding FontSize}" FontWeight="{TemplateBinding FontWeight}" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" Padding="{TemplateBinding Padding}" IsTabStop="False" AutomationProperties.AccessibilityView="Raw" />
                                            <Button x:Name="SecondaryButton" Grid.Column="2" Foreground="{ThemeResource TextOnAccentFillColorPrimaryBrush}" Background="{TemplateBinding Background}" BorderThickness="0" BorderBrush="Transparent" HorizontalContentAlignment="Stretch" VerticalContentAlignment="Stretch" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Padding="0,0,12,0" IsTabStop="False" AutomationProperties.AccessibilityView="Raw">
                                                <Button.Content>
                                                    <AnimatedIcon Height="12" Width="12" VerticalAlignment="Center" HorizontalAlignment="Right" AutomationProperties.AccessibilityView="Raw">
                                                        <animatedvisuals:AnimatedChevronDownSmallVisualSource />
                                                        <AnimatedIcon.FallbackIconSource>
                                                            <FontIconSource FontFamily="{ThemeResource SymbolThemeFontFamily}" FontSize="8" Glyph="&#xE96E;" IsTextScaleFactorEnabled="False" />
                                                        </AnimatedIcon.FallbackIconSource>
                                                    </AnimatedIcon>
                                                </Button.Content>
                                            </Button>
                                            <Grid x:Name="Border" Grid.ColumnSpan="3" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="{TemplateBinding CornerRadius}" />

                                        </Grid>

                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </StackPanel.Resources>
                    <TextBlock x:Name="CurrentDisk" Visibility="Collapsed" VerticalAlignment="Center"/>
                    <ProgressRing x:Name="CurrentProgress" IsIndeterminate="False"/>
                    <Button Content="Analyze" Width="120" IsEnabled="False"/>
                    <SplitButton Content="Optimize" IsEnabled="True" x:Name="OptimizeButton" Style="{ThemeResource AccentSplitButtonStyle}" Width="120" Click="Button_Click">
                        <SplitButton.Flyout>
                            <MenuFlyout>
                                <MenuFlyoutItem Text="Optimize selected drive" Click="MenuFlyoutItem_Click"/>
                                <MenuFlyoutItem Text="Optimize all" Click="MenuFlyoutItem_Click_1"/>
                            </MenuFlyout>
                        </SplitButton.Flyout>
                    </SplitButton>
                </StackPanel>
            </Grid>
            <InfoBar x:Name="DetailsBar" IsOpen="True" IsClosable="False" Title="Local Disk (C:)" Message="Media type: SSD (Solid state drive)&#x0a;Last analyzed or optimized: 15.07.2024 10:19&#x0a;Current status: OK (0 days since last retrim)"/>
            <Grid Padding="15" BorderBrush="{ThemeResource CardStrokeColorDefaultBrush}" Background="{ThemeResource SystemFillColorAttentionBackgroundBrush}" BorderThickness="1" CornerRadius="4" Height="120">
                <StackPanel Spacing="5">
                    <TextBlock Text="Scheduled optimization" FontWeight="SemiBold"/>
                    <TextBlock Text="Off (Frequency: none)"/>
                    <Button Content="Turn on" Width="120" Margin="0, 5, 0, 0" HorizontalAlignment="Right" Click="Button_Click_1"/>
                </StackPanel>
            </Grid>
        </StackPanel>
    </Grid>

</winuiex:WindowEx>
